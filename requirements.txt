# Installation dependencies:
matplotlib==3.8.4
tensorflow==2.17.0
Pillow==10.2.0
opencv-python
numpy==1.23.5
streamlit==1.35.0
scikit-learn==1.5.0
# Open Anaconda Prompt
# Change directory (cd) to root project folder
# Run command "pip install -r requirements.txt"


# Instructions to run:

# 1. prediction_web_sequential.py
# - Open prediction_web_sequential.py
# - In the code, change "model_path" to correct file path of model_sequential.h5 in root project folder
# - Open Anaconda Prompt
# - Change directory (cd) to root project folder
# - Run command "streamlit run prediction_web_sequential.py"
# - Click "Browse files" to upload an image
# - Model prediction of uploaded image will appear with confidence levels of each class

# 2. prediction_camera_sequential.py
# - Open prediction_camera_sequential.py
# - In the code, change "model_path" to correct file path of model_sequential.h5 in root project folder
# - Open Anaconda Prompt
# - Change directory (cd) to root project folder
# - Run command "streamlit run prediction_camera_sequential.py"
# - Popup window will appear with laptop camera showing
# - Camera shows model prediction in upper left of the window
# - Hover apple and uni sushi in front of camera to see model's prediction

# 3. prediction_web_functional.py
# - Open prediction_web_functional.py
# - In the code, change "MODEL_PATH" to correct file path of model_functional.h5 in root project folder
# - Open Anaconda Prompt
# - Change directory (cd) to root project folder
# - Run command "streamlit run prediction_web_functional.py"
# - Click "Browse files" to upload an image
# - Model prediction of uploaded image will appear with confidence levels of each class
# - Scroll down to see three heatmaps generated by GradCAM for each of the three classes

# 4. CNN_sequential.ipynb
# - Open CNN_sequential.ipynb
# - In the code, change "root" to correct file path of root project folder
# - To train sequential model, run the CNN_sequential.ipynb file

# 5. CNN_functional.ipynb
# - Open CNN_functional.ipynb
# - In the code, change "root" to correct file path of root project folder
# - To train functional model, run the CNN_functional.ipynb file


# 6. data_exploration.py
# - Open data_exploration.py
# - In the code, change "base_folder" to correct file path of root project folder
# - To plot all images in dataset, run the data_exploration.py file


# 6. split_dataset.py
# - Dataset has already been split, thus there it is not required to run this folder
# - Open split_dataset.py
# - In the code, change "root" to correct file path of root project folder
# - To split dataset into Train, Test, and Validation sets, run the split_dataset.py file
